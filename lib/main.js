"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=new(function(){function t(){this.list=[],this.waitList=[],this.parallelNum=2}return Object.defineProperty(t.prototype,"parallel",{get:function(){return this.parallelNum},set:function(t){this.parallelNum=t},enumerable:!1,configurable:!0}),t.prototype.add=function(t){var e=this;if("function"!=typeof t)throw new Error("fn must be a function");if(this.list.length<this.parallelNum){this.list.push(t);var n=t();if("function"!=typeof n.then)throw new Error("fn function must return a <Promise>");return this.changeList(n),n}return new Promise((function(n,r){try{e.waitList.push({promise:t,cb:n})}catch(t){r(t)}}))},t.prototype.changeList=function(t){var e=this;null==t||t.then((function(){if(e.waitList.length>0){var t=e.waitList.shift(),n=null==t?void 0:t.promise();null==n||n.then((function(){null==t||t.cb()})),n&&e.changeList(n)}else e.list.length=0})).catch((function(t){console.log(t)}))},t}());exports.changeParallel=function(e){if(null!=e){if("number"!=typeof e)throw new TypeError("function changeParallel params must be number");return e=e<=0?1:e,t.parallel=e,e}return t.parallel},exports.default=function(e,n){for(var r,i=[],l=2;l<arguments.length;l++)i[l-2]=arguments[l];return null===(r=t.add((function(){return e.apply(n,i)})))||void 0===r?void 0:r.then((function(t){return Promise.resolve(t)})).catch((function(t){return Promise.reject(t)}))};
